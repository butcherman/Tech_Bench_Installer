#################################################################################################################
#                                                                                                               #
#                                                                                                               #
#                                      Tech Bench Docker Installation                                           #
#         NOTE:  Modify .env file to change default passwords before executing `docker-compose up` command      #
#                                                                                                               #
#                                                                                                               #
#################################################################################################################
version: '3.8'
networks:
  app-tier:
    driver: bridge
volumes:
  appData:
services:

  #  Application Container
  tech_bench:
    container_name: tech_bench
    restart: unless-stopped
    image: butcherman/tech_bench_app:latest
    volumes:
      - appData:/app
      - ./storageData/disks:/app/storage/app/
      - ./storageData/backups:/app/storage/backups/
      - ./storageData/logs:/app/storage/logs
      - ./storageData/keystore:/app/keystore
    environment:
      - TB_URL=${TB_URL}
      - ENABLE_HTTPS=${ENABLE_HTTPS}
      - SERVICE=app
    networks:
      - app-tier
    depends_on:
      - database
      - redis

  #  Horizon Container
  horizon:
    container_name: horizon
    restart: unless-stopped
    image: butcherman/tech_bench_app:latest
    volumes:
      - appData:/app
      - ./storageData/disks:/app/storage/app/
      - ./storageData/backups:/app/storage/backups/
      - ./storageData/logs:/app/storage/logs
      - ./storageData/keystore:/app/keystore
    environment:
      - SERVICE=horizon
    networks:
      - app-tier
    depends_on:
      - database
      - redis

  #  Scheduler Container
  scheduler:
    container_name: scheduler
    restart: unless-stopped
    image: butcherman/tech_bench_app:latest
    volumes:
      - appData:/app
      - ./storageData/disks:/app/storage/app/
      - ./storageData/backups:/app/storage/backups/
      - ./storageData/logs:/app/storage/logs
      - ./storageData/keystore:/app/keystore
    environment:
      - SERVICE=scheduler
    networks:
      - app-tier
    depends_on:
      - database
      - redis

  #  NGINX Web Server
  nginx:
    image: butcherman/tech_bench_nginx:1.0
    container_name: nginx
    restart: unless-stopped
    volumes:
      - appData:/app
      - ./storageData/keystore:/app/keystore
      - ./storageData/disks/public:/app/public/storage
    environment:
      - TB_URL=${TB_URL}
      - ENABLE_HTTPS=${ENABLE_HTTPS}
    ports:
      - '80:80'
      - '443:443'
    networks:
      - app-tier
    depends_on:
      - tech_bench

  #  MySQL Database Container
  database:
    image: butcherman/tech_bench_database:1.0
    container_name: database
    restart: unless-stopped
    volumes:
      - ./appData/database:/bitnami/mysql/data
    networks:
      - app-tier
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}

  #  Redis Container for Cache, Job and Email Queuing
  redis:
    image: butcherman/tech_bench_redis:1.0
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./appData/redis:/bitnami/redis/data
    networks:
      - app-tier
